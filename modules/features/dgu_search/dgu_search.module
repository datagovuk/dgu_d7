<?php
/**
 * @file
 * Code for the dgu search feature.
 */

include_once 'dgu_search.features.inc';


/**
 * Implements hook_ctools_plugin_directory().
 */
function dgu_search_ctools_plugin_directory($module, $plugin) {
    if ($module == 'ctools' && !empty($plugin)) {
        return "plugins/$plugin";
    }
}


// Implements hook_block_info().
function dgu_search_block_info() {
  $blocks = array();
  $search_types = array(
    'app',      // Apps.
    'blog',     // Blogs.
    'forum',    // Forum topic.
    'resource', // Library resource.
    'dataset_request', // Dataset Request.
  );

  // Create a block for each content type to search in solr.
  foreach ($search_types as $search_type) {
    $blocks['search' . $search_type] = array(
      'info' => t('Search ' . $search_type),
    );
  }

  return $blocks;
}


// Implements hook_block_view().
function dgu_search_block_view($delta = '') {
  // Get the search type from delta.
  $search_type = substr($delta, 6);

  // Add the search type into the form state so form can be form_altered correctly.
  $form_state = array(
    'searchtype' => $search_type,
  );

  $searchform = drupal_build_form('search_block_form', $form_state);

  $block['subject'] = t('Search '. $search_type);
  $block['content'] = $searchform;
 
  return $block;
}


// Implements hook_form FORM_ID_alter().
function dgu_search_form_search_block_form_alter(&$form, &$form_state, $form_id) {

  // Add custom form submition so we can redirect.
  $form['#submit'][] = 'dgu_search_form_search_block_form_submit';

  if (isset($form_state['searchtype'])) {
    // Add a variable into the form so we can redirect to correct solr search on submit.
    $form['searchtype'] = array(
      '#type' => 'hidden', 
      '#value' => $form_state['searchtype'], 
    );

    // Add settings for apachesolr_autocomplete's patch to enable filtering by custom search.
    $form['#search_page']['page_id'] = 'search_' . $form_state['searchtype'];
  }

}


/**
 * Added form submit function to retain filters.
 *
 * @see apachesolr_search_form_search_submit()
 */
function dgu_search_form_search_block_form_submit($form, &$form_state) {
  $fv = $form_state['values'];

  $search_types = array(
    'app',      // Apps.
    'blog',     // Blogs.
    'forum',    // Forum topic.
    'resource', // Library resource.
    'dataset_request', // Dataset Request
  ); 
  
  if (isset($fv['search_block_form']) && isset($fv['searchtype']) && in_array($fv['searchtype'], $search_types)) {
    // Replace keys with their rawurlencoded value
    $raw_keys = str_replace("/","%2f",$fv['search_block_form']);

    // Override redirect with a new bundle specific search.
    global $base_url;
    $form_state['redirect'] =  $base_url."/search/everything/" . $raw_keys . "?f[0]=bundle%3A" . $fv['searchtype'];
  }
}


/**
 * @param $form
 * @return the altered form
 *
 * Remove the retain-filters element added to the search form by apachesolr_panels
 *
 */
function dgu_search_hide_retain_filters(&$form){
    unset($form['basic']['retain-filters']);
    return $form;
}

/**
 * @param $form
 * @param $form_state
 * @param $form_id
 *
 * Implement Hook hook_form_FORM_ID_alter which creates our own hidden retain filters input and
 * sets up an after build hook to remove the one provided by apachesolr_panels
 *
 */
function dgu_search_form_apachesolr_panels_search_form_alter(&$form, &$form_state, $form_id){
    $form['dgu']['retain-filters'] = array(
        '#type' => 'hidden',
        '#title' => t('Retain current filters'),
        '#value' => 1,
    );
    $form['#after_build'] = array('dgu_search_hide_retain_filters');
}
